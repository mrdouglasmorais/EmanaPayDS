a48da1a9a88441ed29c062c86967884e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _processAspectRatio = _interopRequireDefault(require("../../StyleSheet/processAspectRatio"));
var _processBackgroundImage = _interopRequireDefault(require("../../StyleSheet/processBackgroundImage"));
var _processBoxShadow = _interopRequireDefault(require("../../StyleSheet/processBoxShadow"));
var _processColor = _interopRequireDefault(require("../../StyleSheet/processColor"));
var _processFilter = _interopRequireDefault(require("../../StyleSheet/processFilter"));
var _processFontVariant = _interopRequireDefault(require("../../StyleSheet/processFontVariant"));
var _processTransform = _interopRequireDefault(require("../../StyleSheet/processTransform"));
var _processTransformOrigin = _interopRequireDefault(require("../../StyleSheet/processTransformOrigin"));
var _sizesDiffer = _interopRequireDefault(require("../../Utilities/differ/sizesDiffer"));
var colorAttributes = {
  process: _processColor.default
};
var ReactNativeStyleAttributes = {
  alignContent: true,
  alignItems: true,
  alignSelf: true,
  aspectRatio: {
    process: _processAspectRatio.default
  },
  borderBottomWidth: true,
  borderEndWidth: true,
  borderLeftWidth: true,
  borderRightWidth: true,
  borderStartWidth: true,
  borderTopWidth: true,
  columnGap: true,
  borderWidth: true,
  bottom: true,
  direction: true,
  display: true,
  end: true,
  flex: true,
  flexBasis: true,
  flexDirection: true,
  flexGrow: true,
  flexShrink: true,
  flexWrap: true,
  gap: true,
  height: true,
  inset: true,
  insetBlock: true,
  insetBlockEnd: true,
  insetBlockStart: true,
  insetInline: true,
  insetInlineEnd: true,
  insetInlineStart: true,
  justifyContent: true,
  left: true,
  margin: true,
  marginBlock: true,
  marginBlockEnd: true,
  marginBlockStart: true,
  marginBottom: true,
  marginEnd: true,
  marginHorizontal: true,
  marginInline: true,
  marginInlineEnd: true,
  marginInlineStart: true,
  marginLeft: true,
  marginRight: true,
  marginStart: true,
  marginTop: true,
  marginVertical: true,
  maxHeight: true,
  maxWidth: true,
  minHeight: true,
  minWidth: true,
  overflow: true,
  padding: true,
  paddingBlock: true,
  paddingBlockEnd: true,
  paddingBlockStart: true,
  paddingBottom: true,
  paddingEnd: true,
  paddingHorizontal: true,
  paddingInline: true,
  paddingInlineEnd: true,
  paddingInlineStart: true,
  paddingLeft: true,
  paddingRight: true,
  paddingStart: true,
  paddingTop: true,
  paddingVertical: true,
  position: true,
  right: true,
  rowGap: true,
  start: true,
  top: true,
  width: true,
  zIndex: true,
  elevation: true,
  shadowColor: colorAttributes,
  shadowOffset: {
    diff: _sizesDiffer.default
  },
  shadowOpacity: true,
  shadowRadius: true,
  transform: {
    process: _processTransform.default
  },
  transformOrigin: {
    process: _processTransformOrigin.default
  },
  filter: {
    process: _processFilter.default
  },
  experimental_mixBlendMode: true,
  isolation: true,
  boxShadow: {
    process: _processBoxShadow.default
  },
  experimental_backgroundImage: {
    process: _processBackgroundImage.default
  },
  backfaceVisibility: true,
  backgroundColor: colorAttributes,
  borderBlockColor: colorAttributes,
  borderBlockEndColor: colorAttributes,
  borderBlockStartColor: colorAttributes,
  borderBottomColor: colorAttributes,
  borderBottomEndRadius: true,
  borderBottomLeftRadius: true,
  borderBottomRightRadius: true,
  borderBottomStartRadius: true,
  borderColor: colorAttributes,
  borderCurve: true,
  borderEndColor: colorAttributes,
  borderEndEndRadius: true,
  borderEndStartRadius: true,
  borderLeftColor: colorAttributes,
  borderRadius: true,
  borderRightColor: colorAttributes,
  borderStartColor: colorAttributes,
  borderStartEndRadius: true,
  borderStartStartRadius: true,
  borderStyle: true,
  borderTopColor: colorAttributes,
  borderTopEndRadius: true,
  borderTopLeftRadius: true,
  borderTopRightRadius: true,
  borderTopStartRadius: true,
  cursor: true,
  opacity: true,
  pointerEvents: true,
  color: colorAttributes,
  fontFamily: true,
  fontSize: true,
  fontStyle: true,
  fontVariant: {
    process: _processFontVariant.default
  },
  fontWeight: true,
  includeFontPadding: true,
  letterSpacing: true,
  lineHeight: true,
  textAlign: true,
  textAlignVertical: true,
  textDecorationColor: colorAttributes,
  textDecorationLine: true,
  textDecorationStyle: true,
  textShadowColor: colorAttributes,
  textShadowOffset: true,
  textShadowRadius: true,
  textTransform: true,
  userSelect: true,
  verticalAlign: true,
  writingDirection: true,
  overlayColor: colorAttributes,
  resizeMode: true,
  tintColor: colorAttributes,
  objectFit: true
};
module.exports = ReactNativeStyleAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,