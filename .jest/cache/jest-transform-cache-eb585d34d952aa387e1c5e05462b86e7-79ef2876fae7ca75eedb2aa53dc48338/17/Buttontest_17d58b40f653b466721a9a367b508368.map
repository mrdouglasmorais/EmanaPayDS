{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_MyButton","_jsxRuntime","describe","it","_render","render","jsx","Button","text","onPress","jest","fn","getByText","buttonText","expect","toBeTruthy","onPressMock","_render2","button","fireEvent","press","toHaveBeenCalledTimes","_render3","color","textColor","getByTestId","props","style","toContainEqual","backgroundColor"],"sources":["Button.test.tsx"],"sourcesContent":["import React from 'react';\nimport {render, fireEvent} from '@testing-library/react-native';\nimport {Button} from './MyButton';\n\ndescribe('MyButton Component', () => {\n  it('renders correctly with default props', () => {\n    const {getByText} = render(\n      <Button text=\"Click Me\" onPress={jest.fn()} />\n    );\n\n    // Verifica se o texto do botão é renderizado\n    const buttonText = getByText('Click Me');\n    expect(buttonText).toBeTruthy();\n  });\n\n  it('calls the onPress function when pressed', () => {\n    const onPressMock = jest.fn();\n    const {getByText} = render(\n      <Button text=\"Click Me\" onPress={onPressMock} />\n    );\n\n    // Simula o clique no botão\n    const button = getByText('Click Me');\n    fireEvent.press(button);\n\n    // Verifica se a função onPress foi chamada\n    expect(onPressMock).toHaveBeenCalledTimes(1);\n  });\n\n  it('applies the custom color and textColor', () => {\n    const {getByText, getByTestId} = render(\n      <Button\n        text=\"Click Me\"\n        onPress={jest.fn()}\n        color=\"red\"\n        textColor=\"yellow\"\n      />\n    );\n\n    // Verifica se a cor de fundo foi aplicada\n    const button = getByTestId('button');\n    expect(button.props.style).toContainEqual({backgroundColor: 'red'});\n\n    // Verifica se a cor do texto foi aplicada\n    const buttonText = getByText('Click Me');\n    expect(buttonText.props.style).toContainEqual({color: 'yellow'});\n  });\n});"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAkC,IAAAG,WAAA,GAAAH,OAAA;AAElCI,QAAQ,CAAC,oBAAoB,EAAE,YAAM;EACnCC,EAAE,CAAC,sCAAsC,EAAE,YAAM;IAC/C,IAAAC,OAAA,GAAoB,IAAAC,mBAAM,EACxB,IAAAJ,WAAA,CAAAK,GAAA,EAACN,SAAA,CAAAO,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC;MAAE,CAAE,CAC/C,CAAC;MAFMC,SAAS,GAAAR,OAAA,CAATQ,SAAS;IAKhB,IAAMC,UAAU,GAAGD,SAAS,CAAC,UAAU,CAAC;IACxCE,MAAM,CAACD,UAAU,CAAC,CAACE,UAAU,CAAC,CAAC;EACjC,CAAC,CAAC;EAEFZ,EAAE,CAAC,yCAAyC,EAAE,YAAM;IAClD,IAAMa,WAAW,GAAGN,IAAI,CAACC,EAAE,CAAC,CAAC;IAC7B,IAAAM,QAAA,GAAoB,IAAAZ,mBAAM,EACxB,IAAAJ,WAAA,CAAAK,GAAA,EAACN,SAAA,CAAAO,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEO;MAAY,CAAE,CACjD,CAAC;MAFMJ,SAAS,GAAAK,QAAA,CAATL,SAAS;IAKhB,IAAMM,MAAM,GAAGN,SAAS,CAAC,UAAU,CAAC;IACpCO,sBAAS,CAACC,KAAK,CAACF,MAAM,CAAC;IAGvBJ,MAAM,CAACE,WAAW,CAAC,CAACK,qBAAqB,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFlB,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,IAAAmB,QAAA,GAAiC,IAAAjB,mBAAM,EACrC,IAAAJ,WAAA,CAAAK,GAAA,EAACN,SAAA,CAAAO,MAAM;QACLC,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAE;QACnBY,KAAK,EAAC,KAAK;QACXC,SAAS,EAAC;MAAQ,CACnB,CACH,CAAC;MAPMZ,SAAS,GAAAU,QAAA,CAATV,SAAS;MAAEa,WAAW,GAAAH,QAAA,CAAXG,WAAW;IAU7B,IAAMP,MAAM,GAAGO,WAAW,CAAC,QAAQ,CAAC;IACpCX,MAAM,CAACI,MAAM,CAACQ,KAAK,CAACC,KAAK,CAAC,CAACC,cAAc,CAAC;MAACC,eAAe,EAAE;IAAK,CAAC,CAAC;IAGnE,IAAMhB,UAAU,GAAGD,SAAS,CAAC,UAAU,CAAC;IACxCE,MAAM,CAACD,UAAU,CAACa,KAAK,CAACC,KAAK,CAAC,CAACC,cAAc,CAAC;MAACL,KAAK,EAAE;IAAQ,CAAC,CAAC;EAClE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}